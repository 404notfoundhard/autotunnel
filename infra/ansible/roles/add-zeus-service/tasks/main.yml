---
# tasks file for add-zeus-service

- name: register ss path
  shell: 'whereis ss | grep -oE "\ [a-z\/]+ss\ "'
  register: ss_path

- name: show ss path
  debug:
    msg: "ss is in this path: {{ss_path.stdout}}"

- name: install required packages
  apt:
    name: "{{ required_packages }}"
    update_cache: yes
  ignore_errors: True
  register: python36_notfound

- name: add python3.6 repo if install failed
  apt_repository:
    repo: ppa:deadsnakes/ppa
    update_cache: yes
  when: python36_notfound != 0
  register: python36_repo_add

- name: install required packages when add repository
  apt:
    name: "{{ required_packages }}"
    update_cache: yes
  when: python36_repo_add is succeeded

- name: get src from git
  git:
    repo: https://github.com/404notfoundhard/autotunnel.git
    dest: /tmp/ansible-tmp/autotunnel/
    # archive: /tmp/autotunnel.zip

- name: add service user for api-server
  user:
    name: "{{api_server_user}}"
    # groups: "{{api_server_user}}"
    password: "{{ api_server_userpass|password_hash('sha512', 65534|random(seed=inventory_hostname)|string) }}"

- name: Copy src api-server
  copy:
    src: /tmp/ansible-tmp/autotunnel/api-server/
    dest: /srv/api-server
    owner: "{{api_server_user}}"
    group: "{{api_server_user}}"
    mode: '755'
    remote_src: yes

- name: dev locale
  action: command sudo update-locale LC_ALL=en_US.UTF-8

- name: set default locale
  lineinfile: 
    dest: /etc/default/locale
    regexp: "LC_ALL"
    line: "LC_ALL=\"en_US.UTF-8\""

- name: create log folder
  file:
    path: "{{api_log_path}}"
    owner: "{{api_server_user}}"
    mode: '755'
    state: directory

- name: Install virtualenv via pip
  pip:
    name: "{{pip_packages}}"
    executable: pip3

- name: create python virtual environment and install requirements
  pip:
     requirements: /srv/api-server/requirements.txt
     virtualenv: /srv/api-server/venv
     virtualenv_python: python3.6

- name: create ssh folder
  file:
    path: "/home/{{ bastion_user }}/.ssh"
    owner: "{{bastion_user}}"
    mode: '755'
    state: directory
- name: create authorized_keys 
  file:
    path: "/home/{{ bastion_user }}/.ssh/authorized_keys"
    owner: "{{bastion_user}}"
    mode: '600'
    state: touch

- name: Find autotunnel pub key in authorized_keys
  command: 'grep -i autotunnel /home/{{ bastion_user }}/.ssh/authorized_keys'
  ignore_errors: True
  register: find_pub_key

- name: change pub key for autotunnel if key exist
  lineinfile: 
    dest: "/home/{{ bastion_user }}/.ssh/authorized_keys"
    regexp: "autotunnel"
    line: "{{lookup('file', '{{ssh_pubkey_local_path}}') }}"
  when: find_pub_key.rc ==   0

- name: add pub key for autotunnel if key doesn't exist
  lineinfile: 
    dest: "/home/{{ bastion_user }}/.ssh/authorized_keys"
    line: "{{lookup('file', '{{ssh_pubkey_local_path}}') }}"
  when: find_pub_key.rc != 0 

- name: give permission kill sockets 48*** to {{api_server_user}} 
  template:
    dest: /etc/sudoers.d/api-server
    src: sudousers.j2
    owner: root
    group: root
    mode: '440'

- name: copy zeus.service
  template:
    dest: /etc/systemd/system/zeus.service
    src: zeus.service.j2
    owner: root
    group: root
  notify:
  - Reload daemon and restart zeus.service 
